networks:
  bikebooking_network:
services:
  server:
    build:
      context: .
      dockerfile: dockerfiles/nginx.dockerfile
    ports:
      - 8080:80
    volumes:
      - ./src:/var/www/html
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
    container_name: bikebooking_api_server
    networks:
      - bikebooking_network
    restart: unless-stopped
  frontend:
    image: nginx:stable
    container_name: bikebooking_frontend
    ports:
      - 9000:80
    volumes:
      - ../client-bikebooking-vue/dist/spa:/usr/share/nginx/html:ro
      - ./nginx/frontend.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - bikebooking_network
    restart: unless-stopped

  worker:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    container_name: bikebooking_worker
    command: php /var/www/html/artisan queue:work --sleep=3 --tries=3 --timeout=90
    volumes:
      - ./src:/var/www/html
    depends_on:
      - mysql
    networks:
      - bikebooking_network
    restart: unless-stopped

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    container_name: bikebooking_api_php
    networks:
      - bikebooking_network
    restart: unless-stopped

  mysql:
    image: mysql:8.0.1
    restart: unless-stopped
    tty: true
    container_name: bikebooking_api_mysql
    env_file:
      - mysql/.env
    ports:
      - 3306:3306
    networks:
      - bikebooking_network
    volumes:
      - ./mysql_data:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    restart: unless-stopped
    container_name: bikebooking_api_phpmyadmin
    depends_on:
      - mysql
    ports:
      - 8090:80
    environment:
      - PMA_HOST=mysql
      - PMA_USER=root
      - PMA_PASSWORD=root.Nomadas-12
    networks:
      - bikebooking_network

  composer:
    build:
      context: .
      dockerfile: dockerfiles/composer.dockerfile
    volumes:
      - ./src:/var/www/html
    depends_on:
      - php
    networks:
      - bikebooking_network
    restart: unless-stopped

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - ./src:/var/www/html
    entrypoint: ["php", "/var/www/html/artisan"]
    networks:
      - bikebooking_network
    restart: unless-stopped
